<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ync.project.admin.mapper.MemberMapper">

<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<resultMap type="com.ync.project.domain.MemberVO" id="memberMap">
		<id property="userid" column="userid"/>
		<result property="userid" column="userid"/>
		<result property="name" column="name"/>
		<result property="userpw" column="userpw"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="sex" column="sex"/>
		<collection property="authList" resultMap="authMap">
		</collection> 
	</resultMap>
	
	<resultMap type="com.ync.project.domain.AuthVO" id="authMap">
		<result property="userid" column="userid"/>
		<result property="auth" column="auth"/>
	</resultMap>

	<!--
	member_auth table은 사용 하지 않고 AuthVO만 사용한다.
	tbl_member 의 autho 컬럼 정보만 따로 담아는 객차이다.
	Spring Security의 기본 사용법과 다르게 tbl_member에 권한 컴럼(auth)을
	넣어서 사용하기에 기본 사용법과 달라진다.
	-->
	<select id="read" resultMap="memberMap">
	SELECT	*
	FROM	team_c_member
	WHERE	userid = #{userid} 
	</select>
	
	<select id="getList" resultMap="memberMap">
	SELECT * FROM team_c_member
	</select>
	
	<insert id="insert">
	INSERT INTO team_c_member (userid,
	                           name,
	                           userpw,
	                           phone,
	                           email,
	                           sex)
	                  values  (#{userid},
	                           #{name},
	                           #{userpw},
	                           #{phone},
	                           #{email},
	                           #{sex})
	</insert>
	
	<delete id="delete">
	DELETE FROM team_c_member 
	WHERE  userid = #{userid}
	</delete>
	
	<update id="update">
	UPDATE team_c_member
	set phone = #{phone},
	    email = #{email}
	WHERE userid = #{userid}
	</update>
	
	<select id="getListWithPaging" resultMap="memberMap">
	<![CDATA[
	SELECT name,
	       userid,
	       userpw,
	       phone,
	       email,
	       sex,
	       auth
	FROM (SELECT /*+INDEX_DESC(team_c_member ta_xpk_member) */
	             rownum rn,
	             name,
	             userid,
	             userpw,
	             phone,
	             email,
	             sex,
	             auth
	      FROM team_c_member
	      WHERE 
	      ]]>
		<include refid="criteria"></include>
	      <![CDATA[
	      rownum <= #{pageNum} * #{amount}
	      )
	WHERE rn > (#{pageNum} -1) * #{amount}
	]]>

	</select>

	<select id="getTotalCount" resultType="int">
		select count(*) from
		team_c_member 
	</select>
	
</mapper>
